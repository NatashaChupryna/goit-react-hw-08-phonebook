{"version":3,"file":"static/js/311.04a7687f.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactsList.styled.jsx","components/ContactList/ContactsList.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  padding: 2px;\n  font-size: 16px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  height: 50px;\n  padding: 8px 16px;\n  font-size: 14px;\n  color: #010101;\n  background-color: transparent;\n  border: 1px solid rgb(200, 200, 200);\n  border-radius: 10px;\n  outline: none;\n  @media screen and (min-width: 768px) and (max-width: 1199px) {\n    width: 200px;\n  }\n`;\n\nexport const Field = styled.div`\n  position: relative;\n  border-radius: 15px;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/slice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { Field, Label, Input } from './Filter.styled';\n\nexport function Filter() {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const onChange = e => {\n    const { value } = e.currentTarget;\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <Field>\n      <Label>Find contacts by name</Label>\n      <Input type=\"text\" value={filter} onChange={onChange} placeholder=\" \" />\n    </Field>\n  );\n}\n","import styled from 'styled-components';\n\nexport const ContactsForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const Title = styled.h2`\n  margin: 0;\n`;\nexport const Button = styled.button`\n  width: 150px;\n  padding: 10px 15px;\n  border-radius: 15px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  border: 1px solid black;\n  font-weight: bold;\n  background-color: transparent;\n  cursor: pointer;\n  transition: all 300ms ease;\n  :hover {\n    background-color: red;\n    color: white;\n  }\n`;\nexport const Label = styled.label`\n  font-size: 16px;\n  display: flex;\n  align-items: center;\n`;\n\nexport const NameInput = styled.input`\n  margin-left: 25px;\n  width: 250px;\n  height: 28px;\n  padding: 8px 16px;\n  font-size: 14px;\n  background-color: transparent;\n  border: 1px solid rgb(200, 200, 200);\n  border-radius: 10px;\n  border: 1px solid rgb(200, 200, 200);\n  :focus-visible {\n    outline: transparent;\n  }\n`;\nexport const NumberInput = styled.input`\n  margin-left: 10px;\n  width: 250px;\n  height: 28px;\n  padding: 8px 16px;\n  font-size: 14px;\n  background-color: transparent;\n  border: 1px solid rgb(200, 200, 200);\n  border-radius: 10px;\n  border: 1px solid rgb(200, 200, 200);\n  :focus-visible {\n    outline: transparent;\n  }\n`;\n","import { nanoid } from '@reduxjs/toolkit';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { toast } from 'react-hot-toast';\nimport { AiOutlineUserAdd } from 'react-icons/ai';\n\nimport {\n  ContactsForm,\n  Title,\n  Button,\n  NameInput,\n  NumberInput,\n  Label,\n} from './ContactForm.styled';\n\nexport const ContactForm = function () {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const name = event.target.elements.name.value;\n    const number = event.target.elements.number.value;\n    const existingContact = contacts.find(\n      contact => contact.name === name && contact.number === number\n    );\n\n    if (existingContact) {\n      toast.error(\n        `Uuum, the contact with name ${name} and phone number ${number} is already in the list`,\n        {\n          style: {\n            border: '1px solid #fc0000',\n            padding: '16px',\n            color: 'black',\n            fontSize: '16px',\n          },\n        }\n      );\n      return;\n    }\n\n    dispatch(\n      addContact({\n        id: nanoid(),\n        name: name,\n        number: number,\n        // userAvatar: `https://api.dicebear.com/5.x/adventurer/svg?seed=${name}`,\n      })\n    );\n    toast.success('Contact was added to the list', {\n      style: {\n        border: '1px solid #128600',\n        padding: '16px',\n        color: 'black',\n        fontSize: '16px',\n      },\n    });\n    form.reset();\n  };\n\n  return (\n    <ContactsForm onSubmit={handleSubmit}>\n      <Title>Add new contact :</Title>\n      <Label>\n        Name\n        <NameInput\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Nataliia\"\n        />\n      </Label>\n\n      <Label>\n        Number\n        <NumberInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"+380XXXXXXXXX\"\n        />\n      </Label>\n      <Button type=\"submit\">\n        <AiOutlineUserAdd style={{ width: '20px', height: '20px' }} />\n        Add contact\n      </Button>\n    </ContactsForm>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n  font-size: 14px;\n`;\n\nexport const Item = styled.li`\n  max-width: 420px;\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 15px;\n`;\n\nexport const IconWrapper = styled.div`\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  background-color: red;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nexport const Name = styled.span`\n  /* margin-right: 15px; */\n`;\n\nexport const Number = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 4px;\n`;\nexport const Button = styled.button`\n  border: none;\n  background-color: transparent;\n  display: flex;\n  align-items: center;\n  padding: 0;\n  cursor: pointer;\n  margin-left: 20px;\n`;\n","import { selectFilteredContacts } from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts, deleteContact } from 'redux/contacts/operations';\nimport { AiOutlineDelete, AiFillPhone } from 'react-icons/ai';\nimport { Loader } from '../Loader/Loader';\nimport { FiUserCheck } from 'react-icons/fi';\nimport {\n  List,\n  Item,\n  Wrapper,\n  IconWrapper,\n  Name,\n  Number,\n  Button,\n} from './ContactsList.styled';\n\nexport function ContactList() {\n  const contacts = useSelector(selectFilteredContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <List>\n      {isLoading && <Loader />}\n      {contacts ? (\n        contacts.map(contact => (\n          <Item key={contact.id}>\n            <Wrapper>\n              <IconWrapper>\n                <FiUserCheck size={18} color={'white'} />\n              </IconWrapper>\n\n              {/* <img src={contact.id} alt={contact.name} width={40} height={40} /> */}\n              <Name>{contact.name} </Name>\n            </Wrapper>\n            <Wrapper>\n              <a type=\"tel\" href={contact.number}>\n                <Number>\n                  <AiFillPhone />\n                  {contact.number}\n                </Number>\n              </a>\n\n              <Button onClick={() => dispatch(deleteContact(contact.id))}>\n                <AiOutlineDelete\n                  style={{ fill: 'red', width: '16px', height: '20px' }}\n                />\n              </Button>\n            </Wrapper>\n          </Item>\n        ))\n      ) : (\n        <span>та блін</span>\n      )}\n    </List>\n  );\n}\n","import styled from 'styled-components';\nimport background from '../../images/phone.jpg';\n\nexport const ContactsSection = styled.section`\n  padding: 36px 0;\n  height: 100vh;\n  background-image: url(${background});\n  background-position: top right -100px;\n  background-repeat: no-repeat;\n  background-size: 70%;\n  @media screen and (min-width: 768px) {\n    background-size: 40%;\n    background-position: top right;\n  }\n`;\n\nexport const Container = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media screen and (min-width: 480px) {\n    width: 480px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 1200px;\n  }\n`;\n\nexport const ContactWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  padding: 20px;\n  margin: 0 auto;\n  width: 99%;\n  background-color: transparent;\n  border-radius: 15px;\n\n  @media screen and (min-width: 768px) {\n    width: 510px;\n  }\n`;\n","import { Filter } from 'components/Filter/Filter';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactsList';\nimport { ContactsSection, Container, ContactWrapper } from './Contacts.styled';\n\nexport default function Contacts() {\n  return (\n    <ContactsSection>\n      <Container>\n        <ContactWrapper>\n          <ContactForm />\n          <Filter />\n          <ContactList />\n        </ContactWrapper>\n      </Container>\n    </ContactsSection>\n  );\n}\n"],"names":["selectIsLoading","state","contacts","isLoading","selectFilter","filter","selectFilteredContacts","createSelector","items","name","toLowerCase","includes","Label","styled","Input","Field","Filter","useSelector","dispatch","useDispatch","type","value","onChange","e","currentTarget","setFilter","placeholder","ContactsForm","Title","Button","NameInput","NumberInput","ContactForm","onSubmit","event","preventDefault","form","target","elements","number","find","contact","toast","style","border","padding","color","fontSize","addContact","id","nanoid","reset","pattern","title","required","width","height","List","Item","Wrapper","IconWrapper","Name","Number","ContactList","useEffect","fetchContacts","Loader","map","size","href","onClick","deleteContact","fill","ContactsSection","background","Container","ContactWrapper","Contacts"],"sourceRoot":""}