{"version":3,"file":"static/js/59.2b469335.chunk.js","mappings":"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","sources":["components/Form/Form.styled.jsx","components/Form/Form.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","redux/contacts/selectors.js","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/App.styled.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\n\nexport const ContactsForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const Title = styled.h2`\n  margin: 0;\n`\nexport const Button = styled.button`\n  width: 150px;\n  padding: 10px 15px;\n  border-radius: 15px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  border: 1px solid black;\n  font-weight: bold;\n  background-color: transparent;\n  cursor: pointer;\n  transition: all 300ms;\n  :hover {\n    background-color: red;\n    color: white;\n  }\n`;\nexport const NameInput = styled.input`\n  margin-left: 25px;\n  :focus-visible {\n    box-shadow: #516aed 0px 5px 15px;\n    border: none;\n    outline: transparent;\n  }\n`;\nexport const NumberInput = styled.input`\n  margin-left: 10px;\n  :focus-visible {\n    box-shadow: #516aed 0px 5px 15px;\n    border: none;\n    outline: transparent;\n  }\n`;","import { nanoid } from '@reduxjs/toolkit';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { toast } from 'react-hot-toast';\nimport { AiOutlineUserAdd} from \"react-icons/ai\";\n\nimport { ContactsForm, Title, Button, NameInput, NumberInput } from './Form.styled';\n\n\nexport const ContactForm = function () {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const name = event.target.elements.name.value;\n    const number = event.target.elements.number.value;\n    const existingContact = contacts.find(\n      contact => contact.name === name && contact.number === number\n    );\n\n    if (existingContact) {\n      toast.error(\n        `Uuum, the contact with name ${name} and phone number ${number} is already in the list`\n      );\n      return;\n    }\n\n    dispatch(\n      addContact({\n        id: nanoid(),\n        name: name,\n        number: number,\n        userAvatar : `https://api.dicebear.com/5.x/adventurer/svg?seed=${name}`,\n      })\n    );\n    \n    form.reset();\n  };\n\n  return (\n    <ContactsForm onSubmit={handleSubmit} autoComplete=\"on\">\n      <Title>Add new contact :</Title>\n      <label>\n        Name :\n        <NameInput\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Nataliia\"\n        />\n      </label>\n\n      <label>\n        Number :\n        <NumberInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"+380XXXXXXXXX\"\n        />\n      </label>\n      <Button type=\"submit\"><AiOutlineUserAdd style={{width: '20px', height: '20px'}}/>Add contact</Button>\n    </ContactsForm>\n  );\n};\n","import styled from '@emotion/styled'\n\nexport const Ring = styled.div`\n   position:absolute;\n  top:50%;\n  left:50%;\n  transform:translate(-50%,-50%);\n  width:150px;\n  height:150px;\n  background:transparent;\n  border:3px solid #3c3c3c;\n  border-radius:50%;\n  text-align:center;\n  line-height:150px;\n  font-family:sans-serif;\n  font-size:20px;\n  color:red;\n  letter-spacing:4px;\n  text-transform:uppercase;\n  text-shadow:0 0 10px #ef3f3f;\n  box-shadow:0 0 20px rgba(0,0,0,.5);  \n\n  &:before\n{\n  content:'';\n  position:absolute;\n  top:-3px;\n  left:-3px;\n  width:100%;\n  height:100%;\n  border:3px solid transparent;\n  border-top:3px solid red;\n  border-right:3px solid #c93b22;\n  border-radius:50%;\n  animation:animateC 2s linear infinite;\n}\n`\nexport const LoaderSpan = styled.span`\n    display:block;\n  position:absolute;\n  top:calc(50% - 2px);\n  left:50%;\n  width:50%;\n  height:4px;\n  background:transparent;\n  transform-origin:left;\n  animation:animate 2s linear infinite;\n  &:before\n{\n  content:'';\n  position:absolute;\n  width:16px;\n  height:16px;\n  border-radius:50%;\n  background:#fa0505;\n  top:-6px;\n  right:-8px;\n  box-shadow:0 0 20px #fdfdfb;\n  @keyframes animateC\n{\n  0%\n  {\n    transform:rotate(0deg);\n  }\n  100%\n  {\n    transform:rotate(360deg);\n  }\n}\n@keyframes animate\n{\n  0%\n  {\n    transform:rotate(45deg);\n  }\n  100%\n  {\n    transform:rotate(405deg);\n  }\n}\n}\n`\n\n// @keyframes animateC\n// {\n//   0%\n//   {\n//     transform:rotate(0deg);\n//   }\n//   100%\n//   {\n//     transform:rotate(360deg);\n//   }\n// }\n// @keyframes animate\n// {\n//   0%\n//   {\n//     transform:rotate(45deg);\n//   }\n//   100%\n//   {\n//     transform:rotate(405deg);\n//   }\n// }","import { Ring, LoaderSpan } from \"./Loader.styled\";\n\nexport const Loader = () => {\n    return (\n        <Ring className=\"ring\">Loading\n        <LoaderSpan></LoaderSpan>\n      </Ring>\n    );\n  };","import styled from '@emotion/styled';\n\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n  font-size: 14px;\n`;\n\nexport const Item = styled.li`\nmax-width: 420px;\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\nexport const Wrapper = styled.div`\n display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 15px;\n`\n\nexport const Name = styled.span`\n  /* margin-right: 15px; */\n`\n\nexport const Number = styled.span`\ndisplay: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 4px;\n`\nexport const Button = styled.button`\n\n  border: none;\n  background-color: transparent;\n  display: flex;\n  align-items: center;\n  padding: 0;\n  cursor: pointer;\n  margin-left: 20px;\n\n`;\n\n","import {useEffect} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {fetchContacts, deleteContact } from 'redux/contacts/contactsOperations';\nimport { nanoid } from 'nanoid';\nimport { AiOutlineDelete, AiFillPhone} from \"react-icons/ai\";\nimport { Loader } from '../Loader/Loader';\nimport { List, Button, Item, Name, Number, Wrapper } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.filter);\n  const loading = useSelector(state => state.contacts.isLoading);\n  const dispatch = useDispatch();\n\n  const filteredContacts = (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    ).sort((a, b) => a.name.localeCompare(b.name));\n  };\n\n  const visibleContacts = filteredContacts(contacts, filter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n\n  return (\n    <List>\n      {loading && <Loader/>}\n      {visibleContacts ? (\n        visibleContacts.map(contact => (\n          <Item key={nanoid()}>\n            <Wrapper>\n            <img src={contact.userAvatar} alt=\"\" width={40} height={40}/>\n            <Name>{contact.name} : </Name>\n            </Wrapper>\n            <Wrapper>\n            <Number> <AiFillPhone/>{contact.number}</Number>\n            <Button onClick={() => dispatch(deleteContact(contact.id))}>\n              <AiOutlineDelete style={{fill : 'red', width: '16px', height: '20px'}}/>\n            </Button>\n            </Wrapper>\n          \n          </Item>\n        ))\n      ) : (\n        <span>та блін</span>\n      )}\n    </List>\n  );\n};\n\n","export const getContacts = state => state.contacts;\n\nexport const getFilter = state => state.filter;","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\nexport const FilterInput = styled.input`\n  width: 160px;\n  :focus-visible {\n    box-shadow: #516aed 0px 5px 15px;\n    border: none;\n    outline: transparent;\n  }\n`;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/contacts/selectors';\nimport { setFilter } from '../../redux/contacts/filtersSlice';\nimport { FilterInput, Label } from './Filter.styled';\n\nexport const Filter = function () {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  const filterContacts = event => dispatch(setFilter(event.target.value));\n\n  return (\n    <Label>\n      Find contact by name :\n      <FilterInput name={filter} type=\"text\" onChange={filterContacts} />\n    </Label>\n  );\n};\n","import styled from '@emotion/styled';\n// import background from './images/phones.jpeg'\nimport background from './images/phone.jpg'\nexport const StyledApp = styled.div`\npadding-left: 450px;\n  height: 100vh;\n  color: #010101;\n  padding-top: 30px;\n  background-image: url(${background});\n  background-position: top right;\n  background-repeat:no-repeat;\n  background-size: contain;\n\n`;\n\nexport const Title = styled.h1`\n  font-size: 32px;\n    color: red;\n`","import { Toaster } from 'react-hot-toast';\nimport { ContactForm } from 'components/Form/Form';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from '../components/Filter/Filter';\nimport { Title } from '../components/App.styled';\n\n\nexport default function Contacts() {\n\n  return (\n    <>\n      <Title>Phonebook</Title>\n\n      <ContactForm></ContactForm>\n\n      <Title>Contacts</Title>\n\n      <Filter></Filter>\n\n      <ContactList/>\n\n\n      <Toaster />\n    </>\n  );\n}\n"],"names":["ContactsForm","styled","Title","Button","NameInput","NumberInput","ContactForm","dispatch","useDispatch","contacts","useSelector","state","items","onSubmit","event","preventDefault","form","target","name","elements","value","number","find","contact","toast","addContact","id","nanoid","userAvatar","reset","autoComplete","type","pattern","title","required","placeholder","style","width","height","Ring","LoaderSpan","Loader","className","List","Item","Wrapper","Name","Number","ContactList","filter","loading","isLoading","visibleContacts","toLowerCase","includes","sort","a","b","localeCompare","filteredContacts","useEffect","fetchContacts","map","src","alt","onClick","deleteContact","fill","getFilter","Label","FilterInput","Filter","onChange","setFilter","background","Contacts"],"sourceRoot":""}